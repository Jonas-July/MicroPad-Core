import { ShowdownExtension } from 'showdown';
import { evaluate as fendEvaluate } from 'fend-wasm';

export type MarkdownTransformer = ShowdownExtension;

export const fendTransformer: MarkdownTransformer = {
	type: 'listener',
	listeners: {
		'images.after': (event, text: string) =>
			// e.g. [[1+1]] -> 2
			text.replace(/\[\[([^]+?)\]\]/gi, (match, content) => {
				let result = fendEvaluate(content);
				if (result === "Interrupted") {
					result = "<i>Calculation timed out</i>";
				}
				return `<span title="Generated by fend">${result}</span>`;
			})
	}
};

export const colourTransformer: MarkdownTransformer = {
	type: 'listener',
	listeners: {
		'images.after': (event, text: string) =>
			// e.g. c[this is green](green), or c[red](rgb(255, 0, 0))
			text.replace(/c\[([^\]]+)]\(([^()]*(?:\([^()]*\)[^()]*)?)\)/gi, (match, content, colour) =>
				`<span style="color: ${colour}">${content}</span>`
			)
	}
};
