import { ShowdownExtension } from 'showdown';
import { evaluate_fend_with_timeout } from 'fend-wasm';

export type MarkdownTransformer = ShowdownExtension;

export const fendTransformer: MarkdownTransformer = {
	type: 'listener',
	listeners: {
		'images.after': (event, text: string) =>
			// e.g. [[1+1]] -> 2
			text.replace(/\[\[([^]+?)\]\]/gi, (match, content) => {
				let result = evaluate_fend_with_timeout(content, 500);
				if (result === "Error: Interrupted") {
					result = "Error: Calculation timed out";
				}
				if (result.startsWith("Error:")) {
					result = `<span style="color: red"><i>${result}</i></span>`;
				}
				return `<span title="Generated by fend">${result}</span>`;
			})
	}
};

export const colourTransformer: MarkdownTransformer = {
	type: 'listener',
	listeners: {
		'images.after': (event, text: string) =>
			// e.g. c[this is green](green), or c[red](rgb(255, 0, 0))
			text.replace(/c\[([^\]]+)]\(([^()]*(?:\([^()]*\)[^()]*)?)\)/gi, (match, content, colour) =>
				`<span style="color: ${colour}">${content}</span>`
			)
	}
};
